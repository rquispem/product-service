plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.rquispe.microservices.core.recommendation'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
	mapstructVersion = "1.3.1.Final"
	set('springCloudVersion', "Hoxton.SR3")
}

repositories {
	mavenCentral()
	maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
	maven { url "https://repo.spring.io/libs-milestone" }
}

dependencies {
	implementation project(":api")
	implementation project(":util")
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	implementation('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
	implementation('org.springframework.cloud:spring-cloud-starter-stream-kafka')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	implementation('org.springframework.cloud:spring-cloud-starter-config')
	implementation('org.springframework.retry:spring-retry')

	//tracing
	implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
	implementation('org.springframework.cloud:spring-cloud-starter-zipkin')

	implementation("org.mapstruct:mapstruct:${mapstructVersion}")

	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation('org.springframework.cloud:spring-cloud-stream-test-support')
	testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
